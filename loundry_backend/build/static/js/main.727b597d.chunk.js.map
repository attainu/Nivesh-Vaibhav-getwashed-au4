{"version":3,"sources":["React/Navbar.js","React/Services.js","React/Homepage.js","Redux/action/getOrder.js","Redux/action/bookOrder.js","React/bookOrder.js","React/getUserOrder.component.js","React/Profile.js","React/Nomatch.js","Redux/action/makeRegistration.js","React/SignUpForm.js","Redux/action/makeLogin.js","React/SignInForm.js","React/payment.component.js","React/changeAddress.js","React/bookingCart.js","React/logout.js","React/dashboard.js","App.js","serviceWorker.js","Redux/store.js","index.js"],"names":["Navigationbar","state","items","ls","get","console","log","this","setState","Navbar","bg","variant","sticky","to","Brand","a","href","Nav","className","Link","Icon","Badge","props","length","React","Component","connect","orderReducer","Services","componentDidMount","Homepage","axios","require","makeOrder","obj","type","payload","bookOrder","id","dispatch","order","error","addCloth","item","action","cloth","product","payloadAction","selectDate","date","setDate","actionType","takeAaction","timeSloat","timesloat","changeTimeSloat","addQuantity","index","removeQuantity","removeOrderItem","sendsameAddress","address","sendNewAddress","sendPaymentMode","BookOrder","then","response","data","ironCloth","catch","dryCleanCloth","washCloth","handleDate","handleTime","time","handleAction","handleCloth","stateCopy","JSON","parse","stringify","handleOrder","cloth_quantity","alert","name","placeholder","onChange","event","target","value","defaultValue","timeSlot","map","key","washAction","userSelectedActionType","Card","Content","Header","cloth_name","Meta","price","Description","extra","onClick","Group","loginReducer","loginUser","userSelectedTimeSloat","GetOrderByUserId","userId","orders","message","order_date","order_collection_time","order_status","order_totalprice","Table","striped","Row","HeaderCell","order_items","Body","Cell","total","Profile","handleGetOrder","getOrder","handleBookOrder","isLoggedIn","localStorage","getItem","Jumbotron","userName","left","right","email","mobile","city","e","targetKey","fullName","orderName","token","headers","Accept","removeItem","Nomatch","register","SignUpForm","handleError","isError","password","handleChange","bind","handleSubmit","checked","preventDefault","IsEmail","makeRegistration","test","onSubmit","Form","controlId","Label","Control","Text","Button","post","sendMassage","SignInForm","makeLogin","loginMessage","user","setItem","Payment","handlePaymentMode","mode","selectedPaymentMode","PaymentMode","selectPaymentMode","paymentMode","ChangeAddress","handleEditAddress","handleChangeAddress","handleNOChangeAddress","selectSameAddress","handleSubmitAddress","selectNewAddress","Address","col","row","BookingCart","handleAddQuantity","addItemQuantity","handleRemoveQuantity","removeItemQuantity","handleRemoveItem","procedeToOrder","procedeOrder","totalCost","Logout","Layout","Sider","SiderDemo","collapsed","toggle","trigger","collapsible","theme","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","style","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","App","Container","exact","path","component","Dashboard","Boolean","window","location","hostname","match","loginState","userOrderState","rootReducer","combineReducers","totalvalue","result","userSelectedPaymentMode","orderId","order_userId","order_paymentmode","order_address","order_orderId","set","itemsCopy","slice","newItem","push","itemindex","itemIndex","newItems","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.727b597d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar,Badge} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport ls from 'local-storage';\r\nclass Navigationbar extends React.Component\r\n{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      items :[]\r\n    }\r\n  }\r\n  async componentDidMount(){\r\n    let items = await ls.get('BookingCart');\r\n    console.log(items);\r\n    this.setState({\r\n      items\r\n    })\r\n  }\r\n    render()\r\n    {\r\n        return(\r\n           <div>\r\n             <Navbar bg=\"primary\" variant=\"dark\" sticky='top'>\r\n               <Link to=\"/\"><Navbar.Brand a href=\"/\">LOUNDRY</Navbar.Brand></Link> \r\n                <Nav className=\"mr-auto\">\r\n                <Link to=\"/home\"> <Nav.Link a href=\"/home\">HOME</Nav.Link></Link> \r\n                <Link to=\"/Services\"><Nav.Link a href=\"/services\">Services</Nav.Link></Link> \r\n                <Link to=\"/profile\"><Nav.Link a href=\"/profile\">Profile</Nav.Link></Link> \r\n                 \r\n                </Nav>\r\n                <Nav className=\"\">\r\n                <Link to=\"/booking\"> <Nav.Link a href=\"/booking\">\r\n                <Icon className=\"large shopping cart\"/>   \r\n                <Badge variant=\"warning\">\r\n                   { \r\n                    this.props.items && this.props.items.length\r\n                   }\r\n                </Badge>\r\n                </Nav.Link>\r\n                </Link> \r\n                <Link to=\"/dashboard\"><Nav.Link a href=\"/dashboard\" >Dashboard</Nav.Link></Link> \r\n                <Link to=\"/signin\"><Nav.Link a href=\"/signin\" >SignIn</Nav.Link></Link> \r\n                <Link to=\"/signup\"><Nav.Link a href=\"/signup\">SignUp</Nav.Link></Link> \r\n                <Link to=\"/logout\"><Nav.Link a href=\"/logout\">LogOut</Nav.Link></Link> \r\n                </Nav>\r\n               \r\n            </Navbar>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    \r\n    return{\r\n       items : state.orderReducer.items\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navigationbar);\r\n\r\n ","import  React from \"react\";\r\nimport { Input, Menu } from 'semantic-ui-react';\r\nclass Services extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    componentDidMount=()=>{\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div>\r\n\r\n        </div>);\r\n    }\r\n}\r\nexport default Services;","import  React from \"react\";\r\nimport { Input, Menu } from 'semantic-ui-react'\r\nclass Homepage extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    componentDidMount=()=>{\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div>\r\n\r\n        </div>);\r\n    }\r\n}\r\nexport default Homepage;","const axios = require('axios');\r\nexport const getOrder=(id)=>\r\n{\r\n   return async(dispatch)=>{\r\n    const token = localStorage.token;\r\n    \r\n     if (token){\r\n      console.log('inside if',id);\r\n      let result =  await axios.get(`http://localhost:8080/order/read/user/${id}`,{\r\n          headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'authorization': `${token}`\r\n        }\r\n      }); \r\n    result\r\n      .then((response)=>{       \r\n        if(response.data.message){\r\n             localStorage.removeItem(\"token\");\r\n        }\r\n        else{\r\n          console.log('inside else');\r\n            dispatch(makeOrder(response.data))\r\n        }})\r\n        \r\n      .catch((error)=>{ console.log(error)})\r\n  }\r\n}   \r\n}\r\nconst makeOrder=(obj)=>({\r\n  type:\"fetch_user\",\r\n  payload:obj\r\n})\r\n\r\n","export const bookOrder=(id)=>{\r\n    console.log(id);\r\nreturn (dispatch)=>{\r\n    try {\r\n            dispatch(order(id));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n}\r\nconst order=(id)=>({\r\n    type:\"book_order\",\r\n    payload : id\r\n})\r\n\r\n// dispatch function for add Cloth to order\r\nexport const addCloth=(item,action)=>{\r\n    return (dispatch)=>{\r\n        try{\r\n            dispatch(cloth(item,action));\r\n        }catch(error){\r\n            console.log(error);\r\n        }   \r\n    }\r\n}\r\nconst cloth=(product,action)=>({\r\n    type: \"add_cloth\",\r\n    payload : product,\r\n    payloadAction : action\r\n})\r\n//dispatch function for change date\r\nexport const selectDate = (date)=>{\r\nreturn (dispatch)=>{\r\n        try{\r\n            dispatch(setDate(date));\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst setDate=(date)=>({\r\n    type: 'select_date',\r\n    payload: date\r\n})\r\n// dispatch function for change actionType\r\nexport const action = (actionType)=>{\r\n    return (dispatch)=>{\r\n    try {\r\n            dispatch(takeAaction(actionType));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}}\r\nconst takeAaction=(obj)=>({\r\n    type:\"change_action\",\r\n    payload: obj\r\n})\r\n\r\n// dispact function for change time slote\r\nexport const timeSloat = (timesloat)=>{\r\n    return (dispatch)=>{\r\n    try {\r\n       \r\n            dispatch(changeTimeSloat(timesloat));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}}\r\nconst changeTimeSloat=(obj)=>({\r\n    type:\"change_time\",\r\n    payload: obj\r\n});\r\n \r\n//Dispatch Function for edit [ADD] item quantity\r\nexport const addItemQuantity =(index)=>{\r\n    return (dispatch)=>{\r\n        try {\r\n            console.log('inside dispatch');\r\n            dispatch(addQuantity(index))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst addQuantity=(index)=>({\r\n    type : 'addQuantity',\r\n    payload : index\r\n})\r\n\r\n// Dispatch Function for remove item Quantity\r\nexport const removeItemQuantity=(index)=>{\r\n    return (dispatch)=>{\r\n        try {\r\n            dispatch(removeQuantity(index));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst removeQuantity=(index)=>({\r\n    type : 'removeQuantity',\r\n    payload : index\r\n})\r\n\r\n// dispatch function for remove item from Cart\r\nexport const removeItem=(index)=>{\r\n    return (dispatch)=>{\r\n        try {\r\n            console.log('inside dispatch');\r\n            dispatch(removeOrderItem(index));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst removeOrderItem=(index)=>({\r\n    type : 'removeItem',\r\n    payload : index\r\n})\r\n\r\nexport const selectSameAddress=(address)=>{\r\n   \r\n    return (dispatch)=>{\r\n        try {\r\n            \r\n            dispatch(sendsameAddress(address))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst sendsameAddress=(address)=>({\r\n       type : \"selectAddressForOrder\",\r\n    payload :address\r\n});\r\n\r\nexport const selectNewAddress=(obj)=>{\r\n    return (dispatch)=>{\r\n        try {\r\n           \r\n            dispatch(sendNewAddress(obj));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst sendNewAddress=(obj)=>({\r\n    type : \"selectNewAddressForOrder\",\r\n    payload : obj\r\n});\r\n\r\nexport const selectedPaymentMode =(mode)=>{\r\n    \r\n    return (dispatch)=>{\r\n        try{\r\n            dispatch(sendPaymentMode(mode));\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n} \r\nconst sendPaymentMode =(obj)=>({\r\n    type : \"paymentMode\",\r\n    payload : obj\r\n})\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {Card,Icon } from 'semantic-ui-react';\r\nimport { Jumbotron, Button} from \"react-bootstrap\";\r\nimport getOrder from \"../Redux/action/getOrder\";\r\nimport {bookOrder,selectDate,action,timeSloat,addCloth} from \"../Redux/action/bookOrder\";\r\nconst axios = require('axios');\r\n\r\nclass BookOrder extends React.Component\r\n{\r\n    constructor()\r\n    {   \r\n        super();\r\n        this.state={\r\n            washCloth:[],\r\n            ironCloth:[],\r\n            dryCleanCloth:[]\r\n        }\r\n\r\n    }\r\n    componentDidMount=()=>{\r\n        // for get data from iron wash\r\n        const action = axios.get('http://localhost:8080/iron/read')\r\n            action\r\n                .then((response)=>{\r\n                console.log(response.data);\r\n                this.setState({\r\n                    ironCloth: response.data\r\n                })\r\n            })\r\n            .catch((error)=>{ console.log(error)});\r\n\r\n        //  for get data from dry clean\r\n        const dryClean = axios.get('http://localhost:8080/dryclean/read')\r\n        dryClean\r\n            .then((response)=>{\r\n            console.log(response.data);\r\n            this.setState({\r\n                dryCleanCloth: response.data\r\n            })\r\n        })\r\n        .catch((error)=>{ console.log(error)});\r\n\r\n        // for get data from wash\r\n        const wash = axios.get('http://localhost:8080/wash/read')\r\n        wash\r\n            .then((response)=>{\r\n            console.log(response.data);\r\n            this.setState({\r\n                washCloth: response.data\r\n            })\r\n        })\r\n        .catch((error)=>{ console.log(error)});\r\n\r\n    }\r\n    handleDate=(date)=>{\r\n        this.props.selectDate(date);\r\n    }\r\n    handleTime=(time)=>{\r\n        this.props.timeSloat(time);\r\n    }\r\n    handleAction=(actionType)=>{\r\n        this.props.action(actionType);\r\n    }\r\n    handleCloth=(index,action)=>{\r\n        // console.log(index);\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state));\r\n        switch (action) {\r\n            case 'Wash':\r\n                    this.props.addCloth(stateCopy.washCloth[index],action);\r\n                break;\r\n            case 'Iron':\r\n                    this.props.addCloth(stateCopy.ironCloth[index],action);\r\n                break;\r\n            \r\n            case 'Dry Clean':\r\n                    this.props.addCloth(stateCopy.dryCleanCloth[index],action);\r\n                break;    \r\n            default:\r\n                break;\r\n        }\r\n        //console.log(washClothCopy[index]);\r\n        //this.props.addCloth(washClothCopy[index],action);\r\n    }\r\n    addQuantity(index,action)\r\n    {\r\n    \r\n        let stateCopy = JSON.parse(JSON.stringify(this.state));\r\n        switch (action) {\r\n            case 'Wash':\r\n                console.log('inside wash')  \r\n                    stateCopy.washCloth[index].cloth_quantity++;\r\n                   this.setState({\r\n                       washCloth : stateCopy.washCloth\r\n                   })\r\n                break;\r\n            case 'Iron':\r\n                    stateCopy.ironCloth[index].cloth_quantity++;\r\n                   this.setState({\r\n                       ironCloth : stateCopy.ironCloth\r\n                   })\r\n                break;\r\n            \r\n            case 'Dry Clean':\r\n                    stateCopy.dryCleanCloth[index].cloth_quantity++;\r\n                   this.setState({\r\n                       dryCleanCloth : stateCopy.dryCleanCloth\r\n                   })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n    }\r\n    removeQuantity(index,action){\r\n     let washClothCopy = JSON.parse(JSON.stringify(this.state.washCloth));\r\n     \r\n         let stateCopy = JSON.parse(JSON.stringify(this.state));\r\n         switch (action) {\r\n             case 'Wash':\r\n                 console.log('inside wash')  \r\n                     \r\n                     if(stateCopy.washCloth[index].cloth_quantity > 1)\r\n                        stateCopy.washCloth[index].cloth_quantity--;\r\n                    else\r\n                        alert('You have To select one item for order');\r\n                    this.setState({\r\n                        washCloth : stateCopy.washCloth\r\n                    })\r\n                 break;\r\n             case 'Iron':\r\n                    if(stateCopy.ironCloth[index].cloth_quantity > 1)\r\n                    stateCopy.ironCloth[index].cloth_quantity--;\r\n                    else\r\n                        alert('You have To select one item for order');\r\n                    this.setState({\r\n                        ironCloth : stateCopy.ironCloth\r\n                    })\r\n                 break;\r\n             \r\n             case 'Dry Clean':\r\n                    if(stateCopy.dryCleanCloth[index].cloth_quantity > 1)\r\n                    stateCopy.dryCleanCloth[index].cloth_quantity--;\r\n                    else\r\n                        alert('You have To select one item for order');\r\n                  \r\n                    this.setState({\r\n                        dryCleanCloth : stateCopy.dryCleanCloth\r\n                    })\r\n                 break;\r\n             default:\r\n                 break;\r\n         }\r\n         \r\n    }\r\n    handleOrder=()=>{\r\n        console.log(this.props.id);\r\n        this.props.bookOrder(this.props.id);\r\n    }\r\n    render()\r\n    {\r\n       return( <div>\r\n            <div className=\"makeOrder col-lg-12 col-sm-12 col-md-12 col  mx-auto border border-dark rounded p-2 mt-3\">\r\n                <h1 className=\"text-center border rounded p-2 m-2\">Make Your Order</h1>\r\n                <div className='flexWrapper selectbox  border rounded mt-3 pt-3'>\r\n                    <div className=\"form-group\">\r\n                        <input className='form-control' type=\"date\" name=\"date\" placeholder=\"Order Pickup Date\" onChange={(event)=>{this.handleDate(event.target.value)}}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select placeholder='Select Action' className='form-control' onChange={(event) =>{ this.handleTime(event.target.value)}}>\r\n                        <option defaultValue>Select Time Slot</option>\r\n                        {\r\n                        this.props.timeSlot && this.props.timeSlot.map((time,index) => { \r\n                            return  <option value={time} key={index}>{time}</option>\r\n                        })\r\n                    } \r\n                    </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select placeholder='Select Action' className='form-control' onChange={(event) =>{ this.handleAction(event.target.value)}}>\r\n                        <option defaultValue>Select Wash Type</option>\r\n                        {\r\n                        this.props.washAction && this.props.washAction.map((action,index) => { \r\n                            return  <option value={action} key={index}>{action}</option>\r\n                        })\r\n                    } \r\n                    </select>\r\n                    </div>\r\n                </div> \r\n                <div className=\"row clothlist mt-2\">\r\n                    {(this.props.userSelectedActionType === \"Wash\") && \r\n                    \r\n                    (   \r\n                        this.state.washCloth.map((cloth,index)=>{                              \r\n                            return(\r\n                                <div className=\"cloth_item  col col-sm-2 border m-2 mx-auto rounded shadow p-2\" key={index}>\r\n                                    <Card key={index}>\r\n                                       \r\n                                        <Card.Content>\r\n                                        <Card.Header>{cloth.cloth_name}</Card.Header>\r\n                                        <Card.Meta>\r\n                                            <span className='date'> <Icon name='rupee' />{cloth.price}</span>\r\n                                        </Card.Meta>\r\n                                        <Card.Description>\r\n                                             Quantity :  {cloth.cloth_quantity}\r\n                                        </Card.Description>\r\n                                        </Card.Content>\r\n                                        <Card.Content extra>\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.addQuantity(index,this.props.userSelectedActionType)}}>+</button>&nbsp;\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.removeQuantity(index,this.props.userSelectedActionType)}}>-</button>&nbsp;\r\n                                            <button className=\"fetchButton\" onClick={ (event)=>{this.handleCloth(index,this.props.userSelectedActionType)}} >Add</button>                                                              \r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                                            \r\n                                    \r\n                                </div>                     \r\n                        )})\r\n                    )}\r\n                                    \r\n                </div>\r\n                {/* // code for Dry Clean cloth */}\r\n\r\n                <div className=\"row clothlist mt-2\">\r\n                    {(this.props.userSelectedActionType === \"Dry Clean\") && \r\n                    \r\n                    (this.state.dryCleanCloth.map((cloth,index)=>{\r\n                        \r\n                            return(\r\n                            \r\n                                <div className=\"cloth_item  col col-sm-2 border m-2 mx-auto rounded shadow p-2\" key={index}>\r\n                                    <Card>\r\n                                        \r\n                                        <Card.Content>\r\n                                        <Card.Header>{cloth.cloth_name}</Card.Header>\r\n                                        <Card.Meta>\r\n                                            <span className='date'> <Icon name='rupee' />{cloth.price}</span>\r\n                                        </Card.Meta>\r\n                                        <Card.Description>\r\n                                             Quantity :  {cloth.cloth_quantity}\r\n                                        </Card.Description>\r\n                                        </Card.Content>\r\n                                        <Card.Content extra>\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.addQuantity(index,this.props.userSelectedActionType)}}>+</button>&nbsp;\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.removeQuantity(index,this.props.userSelectedActionType)}}>-</button>&nbsp;\r\n                                            <button className=\"fetchButton\" onClick={ (event)=>{this.handleCloth(index,this.props.userSelectedActionType)}} >Add</button>                                                              \r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                                            \r\n                                    \r\n                                </div>\r\n                    )}) )}\r\n                        \r\n                </div>\r\n\r\n                {/* code For Iron */}\r\n                <div className=\"row mt-2\">\r\n                    {(this.props.userSelectedActionType === \"Iron\") && \r\n                    \r\n                    (this.state.ironCloth.map((cloth,index)=>{                              \r\n                            return(                              \r\n                               <div className=''>\r\n                                    <div className=\"cloth_item border m-2 rounded shadow p-2\" key={index}>\r\n                                    <Card.Group >\r\n                                    <Card>  \r\n                                        <Card.Content>\r\n                                        <Card.Header>{cloth.cloth_name}</Card.Header>\r\n                                        <Card.Meta>\r\n                                            <span className='date'> <Icon name='rupee' />{cloth.price}</span>\r\n                                        </Card.Meta>\r\n                                        <Card.Description>\r\n                                             Quantity :  {cloth.cloth_quantity}\r\n                                        </Card.Description>\r\n                                        </Card.Content>\r\n                                        <Card.Content extra>\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.addQuantity(index,this.props.userSelectedActionType)}}>+</button>&nbsp;\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.removeQuantity(index,this.props.userSelectedActionType)}}>-</button>&nbsp;\r\n                                            <button className=\"fetchButton\" onClick={ (event)=>{this.handleCloth(index,this.props.userSelectedActionType)}} >Add</button>                                                              \r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                    </Card.Group>\r\n                                </div>\r\n                               </div> \r\n                            )}))\r\n                    }\r\n                </div>\r\n                { this.props.userSelectedActionType && \r\n                        <div>\r\n                            <button className='fetchButton mt-2'  onClick={ (event)=>{ this.handleOrder(event.target)}}>Book Order</button>\r\n                    </div>}        \r\n                </div> \r\n        </div>)\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = (state)=>{\r\n        \r\n    return{\r\n        id:state.loginReducer.loginUser.id,\r\n        washAction : state.orderReducer.washAction,\r\n        timeSlot : state.orderReducer.timeSloat,\r\n\r\n        userSelectedActionType : state.orderReducer.userSelectedActionType,\r\n        userSelectedTimeSloat : state.orderReducer.userSelectedTimeSloat,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n       \r\n        bookOrder:  (id)=>dispatch(bookOrder(id)),\r\n        selectDate : (date)=>dispatch(selectDate(date)),\r\n        timeSloat : (time)=>dispatch(timeSloat(time)),\r\n        action : (actionType)=>dispatch(action(actionType)),\r\n        addCloth : (product,action)=>dispatch(addCloth(product,action))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BookOrder);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Icon,Table} from 'semantic-ui-react'\r\nconst axios = require('axios');\r\nclass GetOrderByUserId extends React.Component\r\n{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            orders : [],\r\n            message : \"\"\r\n        }\r\n    }\r\n    componentDidMount=()=>{\r\n        console.log('inside componentDidMount');\r\n        let order = axios.get(`http://localhost:8080/order/read/user/${this.props.userId}`);\r\n            order\r\n                .then((response)=>{\r\n                    console.log(response.data,response.data.length);\r\n                    let length = response.data.length\r\n                    if(length >= 1){\r\n                        console.log('if len gretter ');\r\n                        this.setState({\r\n                            orders : response.data\r\n                        })\r\n                    }\r\n                    else{\r\n                        console.log('if len less than 0 ')\r\n                        this.setState({\r\n                            message : \"You Don't Have Any Order\"\r\n                        })\r\n                    }\r\n                   \r\n                })\r\n                .catch((error)=>{\r\n                    console.log(error);\r\n                })\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className='row'>\r\n                <div className='col-xl-12 col-sm-12 col-md-12 col border border-dark'>\r\n                    {    this.state.message &&(<h2  className=\"border m-2 p-2 bg-light \">{this.state.message}</h2>)}\r\n                    {    \r\n                        this.state.orders.length > 1 && ( <h1 className=\" border m-2 p-2 bg-light\">Your Orders</h1>) \r\n                      \r\n                    }\r\n                    {  this.state.orders.map((item,index)=>{\r\n                            return(\r\n                                <div key={index} className='mt-3'>\r\n                                    <div className='orderHeader'>\r\n                                        <div>\r\n                                            <span>Order Placed at</span><br/>\r\n                                            <span> <strong> {item.order_date }</strong></span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Order Picked At</span><br/>\r\n                                            <span> <strong>{item.order_collection_time}</strong>  </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Order Status</span><br/>\r\n                                            <span> <strong>{item.order_status}</strong>  </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Total Amount</span><br/>\r\n                                            <span> <Icon name='rupee' /><strong>{item.order_totalprice }</strong></span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Order Id</span><br/>\r\n                                            <span><strong>#{item.id }</strong></span>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <div>\r\n                                    <Table striped>\r\n                                                <Table.Header  key={index}>\r\n                                                <Table.Row>\r\n                                                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                                    <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                                                    <Table.HeaderCell>Price</Table.HeaderCell>\r\n                                                    <Table.HeaderCell>Total</Table.HeaderCell>\r\n                                                    <Table.HeaderCell>Action</Table.HeaderCell>\r\n                                                </Table.Row>\r\n                                                </Table.Header>\r\n                                        {item.order_items.map((cloth,index)=>{\r\n                                            return(\r\n                                                <Table.Body key={index}>\r\n                                                <Table.Row>\r\n                                                    <Table.Cell>{cloth.cloth_name} </Table.Cell>\r\n                                                    <Table.Cell>{cloth.cloth_quantity}</Table.Cell>\r\n                                                    <Table.Cell>{cloth.price}</Table.Cell>\r\n                                                    <Table.Cell>{cloth.total}</Table.Cell>\r\n                                                    <Table.Cell>{cloth.action}</Table.Cell>\r\n                                                </Table.Row>\r\n                                                </Table.Body>\r\n                                            )\r\n                                        })}\r\n                                        </Table>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) \r\n                    }\r\n                   \r\n\r\n                </div>           \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        userId : state.loginReducer.loginUser.id\r\n    }\r\n}\r\nconst mapDispatchToProps=(state)=>{\r\n    return{\r\n\r\n    }\r\n}\r\n export default connect(mapStateToProps,mapDispatchToProps)(GetOrderByUserId);","import  React from \"react\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport BookOrder from './bookOrder.js';\r\nimport GetOrderByUserId from './getUserOrder.component';\r\nimport { connect } from \"react-redux\";\r\nimport { Jumbotron} from \"react-bootstrap\";\r\nimport {getOrder} from \"../Redux/action/getOrder\";\r\nimport {bookOrder,selectDate,action,timeSloat,addCloth} from \"../Redux/action/bookOrder\";\r\nconst axios = require('axios');\r\n\r\nclass Profile extends React.Component\r\n{  \r\n    constructor()\r\n    {\r\n        super(); \r\n        let isLoggedIn = false;\r\n        let token = localStorage.getItem('token');\r\n        \r\n        if(token){\r\n            isLoggedIn = true;\r\n        }\r\n       this.state={\r\n            orders:[],\r\n            bookOrder:\"\",\r\n            getOrder:\"\",\r\n            isLoggedIn\r\n        }\r\n       \r\n    }\r\n    componentDidMount=()=>{\r\n   \r\n    }\r\n  \r\n     handleGetOrder=()=>{\r\n        \r\n        this.setState({\r\n            bookOrder : '',\r\n            getOrder:\"order\"\r\n        })\r\n           // this.props.getOrder(this.props.id);\r\n           \r\n    }\r\n    handleBookOrder=()=>{\r\n        this.setState({\r\n            bookOrder : 'order',\r\n            getOrder:\"\"\r\n        })\r\n        // this.props.bookOrder(this.state.bookingOrder);\r\n    }\r\n    \r\n   \r\n    \r\n    render()\r\n    {\r\n        if(this.state.isLoggedIn === false){\r\n            return <Redirect to=\"/signin\"/>\r\n        }\r\n        return(\r\n        <div>\r\n           <Jumbotron>\r\n                <h1>Hello,{this.props.userName}. <br/>Welcome To Express Loundry</h1>\r\n                <p>\r\n                   <quote left=\"true\"/> \"Express Loundry are here To get take care of your cloth\"  <quote right=\"true\"/>\r\n                </p>\r\n                \r\n                <div className='contactDetails'>\r\n                     <h2>Contact Details</h2><hr/>\r\n                    <h5>Email Id : {this.props.email}</h5>\r\n                    <span className=\"textTransform\">\r\n                         <h5>Mobile No : {this.props.mobile}</h5>\r\n                            <h5>City : {this.props.city}</h5>\r\n                            <h5>Address : {this.props.address}</h5>\r\n                    </span>\r\n                </div>                \r\n                    <button className='fetchButton' onClick={(e)=>{this.handleGetOrder(e.target)}}>Fetch Your Orders</button>&nbsp;&nbsp;\r\n                    <button className='fetchButton' onClick={(e)=>{this.handleBookOrder(e.targetKey)}}>Book Your Loundry</button>&nbsp;&nbsp;                \r\n                                 \r\n            </Jumbotron>\r\n            <div>\r\n                { this.state.getOrder && <GetOrderByUserId/>}\r\n                { this.state.bookOrder && <BookOrder/>}\r\n\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n \r\n    return{\r\n        \r\n        id:state.loginReducer.loginUser.id,\r\n        userName : state.loginReducer.loginUser.fullName,\r\n        email : state.loginReducer.loginUser.email,\r\n        mobile : state.loginReducer.loginUser.mobile,\r\n        address : state.loginReducer.loginUser.address,\r\n        city : state.loginReducer.loginUser.city,\r\n        order: state.orderReducer.order,\r\n\r\n        name : state.orderReducer.orderName,\r\n\r\n        washAction : state.orderReducer.washAction,\r\n        timeSlot : state.orderReducer.timeSloat,\r\n\r\n        userSelectedActionType : state.orderReducer.userSelectedActionType,\r\n        userSelectedTimeSloat : state.orderReducer.userSelectedTimeSloat,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n        getOrder: (id)=>dispatch(getOrder(id)),\r\n        bookOrder:  (id)=>dispatch(bookOrder(id)),\r\n        selectDate : (date)=>dispatch(selectDate(date)),\r\n        timeSloat : (time)=>dispatch(timeSloat(time)),\r\n        action : (actionType)=>dispatch(action(actionType)),\r\n        addCloth : (product,action)=>dispatch(addCloth(product,action))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile);","import  React from \"react\";\r\nimport { Input, Menu } from 'semantic-ui-react'\r\nclass Nomatch extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    componentDidMount=()=>{\r\n\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div>\r\n\r\n        </div>);\r\n    }\r\n}\r\nexport default Nomatch;","const axios = require('axios');\r\n\r\nexport const  makeRegistration=(state)=>{\r\n \r\n    return (dispatch)=>{\r\n     \r\n      const result = axios.post('http://localhost:8080/user/signup',state);\r\n      result\r\n        .then((response)=>{ dispatch(register(response.data.message)) })\r\n        .catch((error)=>{console.log(error);})\r\n    }  \r\n} \r\nconst register=(obj)=>({\r\n  type: 'make_registration',\r\n  payload : obj\r\n})\r\n\r\n","import React, { Component } from 'react';\r\nimport  {makeRegistration}  from \"../Redux/action/makeRegistration\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport { connect} from \"react-redux\";\r\nconst axios = require('axios');\r\n\r\nclass SignUpForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            fullName: '',\r\n            email: '',\r\n            password: '',\r\n            mobile:'',\r\n            address:'',\r\n            city:'',           \r\n          \r\n            isError:''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleError=(message)=>{\r\n      this.setState({\r\n        isError : message\r\n      })\r\n    }\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        }); \r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n                if(this.state.fullName === \"\")\r\n          {this.handleError('Enter Your Name'); return false;}\r\n        else if(this.state.fullName.length < 6)\r\n          {this.handleError('Enter more than 6 character Name'); return false;}\r\n        else\r\n          this.handleError('');\r\n\r\n          if(this.IsEmail(this.state.email) === false)  \r\n          {this.handleError('Enter Valid Email Id'); return false;}\r\n         else\r\n          this.handleError(''); \r\n\r\n        if(this.state.password === \"\")  \r\n           {this.handleError('Enter Your Password'); return false;}         \r\n        else if(this.state.password.length < 6)\r\n          {this.handleError('Enter more than 6 character Password'); return false;}\r\n        else\r\n          this.handleError('');\r\n\r\n        \r\n        if(this.state.mobile === \"\")  \r\n           {this.handleError('Enter Your Mobile Number'); return false;}                   \r\n        else if(this.state.mobile.length < 10 || this.state.mobile.length > 10)\r\n          {this.handleError('Enter 10 Digit Mobile Number'); return false;}\r\n        else\r\n          this.handleError('');\r\n\r\n        if(this.state.city === \"\")  \r\n           {this.handleError('Enter Your City'); return false;}         \r\n        else\r\n          this.handleError('');  \r\n\r\n        if(this.state.address === \"\")  \r\n           {this.handleError('Enter Your Address'); return false;}         \r\n        else\r\n          this.handleError('');  \r\n\r\n        let { isError, ...state } = this.state;\r\n        console.log(state);  \r\n        this.props.makeRegistration(state);\r\n        \r\n        \r\n        \r\n    }\r\n      IsEmail(email) {\r\n        var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n        if (!regex.test(email)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"signinForm col-md-5 border-dark shadow rounded mx-auto mt-3 p-3 bg-light\">\r\n          <h1 className=\"mx-auto text-center\">Sign Up</h1> <hr/>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                {(this.state.isError || this.props.message) && (<div className='border rounded bg-warning p-2 text-center text-white'>{ this.state.isError || this.props.message}<br/></div>)}\r\n                \r\n                <Form.Group controlId=\"formBasicName\" >\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" name =\"fullName\"  placeholder=\"Enter Full Name\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\" >\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" name =\"email\"  placeholder=\"Enter Email Id\" onChange={this.handleChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Paasword</Form.Label>\r\n                <Form.Control type=\"password\" name=\"password\"  placeholder=\"Enter your password\" onChange={this.handleChange}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicContact\">\r\n                <Form.Label>Contact No</Form.Label>\r\n                <Form.Control type=\"number\" name=\"mobile\"  placeholder=\"Mobile Number\" onChange={this.handleChange}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicCity\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control type=\"text\" name=\"city\"  placeholder=\"Enetr Your City\" onChange={this.handleChange}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicAddres\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type=\"text\" name=\"address\"  placeholder=\"Enetr Your Address\" onChange={this.handleChange}/>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n\r\n        </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n      message : state.loginReducer.message\r\n  }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n return{\r\n  makeRegistration : (state)=>dispatch(makeRegistration(state))\r\n }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUpForm);","const axios = require('axios');\r\nexport const makeLogin=(state)=>{\r\n    return (dispatch)=>{\r\n        const result = axios.post(`http://localhost:8080/user/signin`,state);\r\n            result\r\n              .then((response)=>{  \r\n              console.log(response);           \r\n                if(response.data.message)\r\n                {  \r\n                  console.log('inside response if',response.data.message);   \r\n                  dispatch(sendMassage(response.data.message))          \r\n                  \r\n                }\r\n                else{\r\n                  let {token,...user} = response.data;\r\n                  localStorage.setItem(\"token\", token)\r\n                  dispatch(loginUser(user));\r\n                }  \r\n              })\r\n              .catch((error)=>{\r\n                console.log(error);\r\n              })\r\n    }\r\n}\r\nconst loginUser = (obj)=>({\r\n      type: \"login_user\",\r\n      payload : obj\r\n})\r\nconst sendMassage= (obj)=>({\r\n  type: \"login_message\",\r\n  payload : obj\r\n})\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link , Redirect} from 'react-router-dom';\r\nimport {makeLogin} from \"../Redux/action/makeLogin\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nconst axios = require('axios');\r\nclass SignInForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleError=(message)=>{\r\n      this.setState({\r\n        isError : message\r\n      })\r\n    }\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n         if(this.IsEmail(this.state.email) === false)  \r\n          {this.handleError('Enter Valid Email Id'); return false;}\r\n         else\r\n          this.handleError(''); \r\n\r\n        if(this.state.password === \"\")  \r\n           {this.handleError('Enter Your Password'); return false;}         \r\n        else if(this.state.password.length < 6)\r\n          {this.handleError('Enter more than 6 character Password'); return false;}\r\n        else\r\n          this.handleError('');\r\n\r\n        \r\n        let { isError, ...state } = this.state;\r\n       this.props.makeLogin(state);\r\n      \r\n    }\r\n   \r\n\r\n      IsEmail(email) {\r\n        var regex = /^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n        if (!regex.test(email)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n      if(this.props.isLoggedIn === true){\r\n        return <Redirect to=\"/profile\"/>;\r\n      }\r\n        return (\r\n        <div className=\"signinForm col-md-5 border-dark shadow rounded mx-auto mt-5 p-3 bg-light\">\r\n            <h1 className=\"mx-auto text-center\">Login</h1> <hr/>\r\n\r\n                  <form onSubmit={this.handleSubmit}>\r\n                  {(this.state.isError || this.props.message) && (<div className='border rounded bg-warning p-2 text-center text-white'>{ this.props.message || this.state.isError}<br/></div>)}\r\n                  <Form.Group controlId=\"formBasicEmail\" >\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control type=\"email\" name =\"email\" placeholder=\"Enter email\" onChange={this.handleChange}/>\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n\r\n          </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n \r\n  return{\r\n        message : state.loginReducer.loginMessage,\r\n        fullName : state.loginReducer.fullName,\r\n        isLoggedIn : state.loginReducer.isLoggedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    makeLogin : (state)=>dispatch(makeLogin(state))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {selectedPaymentMode} from '../Redux/action/bookOrder';\r\n\r\nclass Payment extends React.Component\r\n{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            PaymentMode : '',\r\n        };\r\n    }\r\n    handlePaymentMode=(mode)=>{\r\n       \r\n        // this.setState({PaymentMode : mode});\r\n        this.props.selectedPaymentMode(mode);\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-8 col-lg-8 col-md-8 col-xs-8 col rounded border p-3 mt-3\">\r\n                <h3> Payment Mode</h3><hr/>\r\n                <div className=\"form-group\">\r\n                        <select  className='form-control' onChange={(event) =>{ this.handlePaymentMode(event.target.value)}}>\r\n                        <option defaultValue>Select Payment Mode</option>\r\n                        {\r\n                            this.props.selectPaymentMode && this.props.selectPaymentMode.map((mode,index)=>{ \r\n                                return  <option value={mode} key={index}>{mode}</option>\r\n                            })\r\n                        } \r\n                        </select>\r\n               </div>\r\n            </div>\r\n         </div>\r\n    )\r\n        \r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state.orderReducer.paymentMode);\r\n        return{\r\n        selectPaymentMode : state.orderReducer.paymentMode,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        selectedPaymentMode : (mode)=>dispatch(selectedPaymentMode(mode)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Payment);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form,Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {selectSameAddress,selectNewAddress,bookOrder} from '../Redux/action/bookOrder';\r\nimport Payment from './payment.component';\r\n\r\nclass ChangeAddress extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ChangeAddress : false,\r\n            Address : \"\",\r\n        }\r\n    }\r\n    handleEditAddress=()=>{\r\n        this.setState({ChangeAddress : true});\r\n    }\r\n    handleChangeAddress=(event)=>{\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({ [name] : value})\r\n    }\r\n    handleNOChangeAddress=(address)=>{\r\n       \r\n        this.props.selectSameAddress(address);\r\n    }\r\n    handleSubmitAddress=(address)=>{\r\n       \r\n        this.props.selectNewAddress(address)\r\n    }\r\n    handleOrder=(id)=>{\r\n        this.props.bookOrder(id)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n            <div className='row '>\r\n               <div className='col-xl-8 col-md-8 col-sm-8  border rounded  p-3 mt-3 '>\r\n               <h3>Your Current Address is : <br/><hr/></h3>\r\n                <span className='address'>{this.props.address}</span><br/>\r\n               <Button className='fetchButton' onClick={(event)=>{this.handleNOChangeAddress(this.props.address)}}>Same Address</Button>&nbsp;&nbsp;\r\n                <Button className='fetchButton' onClick={(event)=>{this.handleEditAddress()}}>Edit</Button>\r\n               { this.state.ChangeAddress && ( <div className='change_address m-3'>\r\n                    <h2>New Address</h2><hr/>\r\n                        <Form.Group controlId=\"formBasicName\" >\r\n                        <Form.Label><h4>Address</h4></Form.Label><br/>\r\n                        <textarea col='10' row='20' name='address' onChange={ (event)=>{this.handleChangeAddress(event)}}></textarea>\r\n                        </Form.Group>\r\n                        <button className='fetchButton' onClick={(event)=>{ this.handleSubmitAddress(this.state.address)}}>Save</button>\r\n                </div>) }\r\n               \r\n               </div>\r\n              \r\n            </div>\r\n            <div>\r\n                 <Payment/>\r\n            </div>\r\n            <div className='row mt-2'>\r\n            <button className='fetchButton p-2'onClick={(event)=>{this.handleOrder(this.props.userId)}}><Link to='' href=''>Book Order</Link></button>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        address : state.loginReducer.loginUser.address,\r\n        userId : state.loginReducer.loginUser.id\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        selectSameAddress : (address)=>dispatch(selectSameAddress(address)),\r\n        selectNewAddress : (address)=>dispatch(selectNewAddress(address)),\r\n        bookOrder : (id)=>dispatch(bookOrder(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ChangeAddress);\r\n ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport Booking from './bookOrder';\r\nimport { Card,Icon,Image } from 'semantic-ui-react';\r\nimport {addItemQuantity,removeItemQuantity,removeItem} from '../Redux/action/bookOrder'\r\nimport ChangeAddress from './changeAddress';\r\nclass BookingCart extends React.Component\r\n{\r\n    constructor(props){\r\n        super();\r\n        let isLoggedIn = false;\r\n        let token = localStorage.getItem('token');\r\n        if(token){\r\n            isLoggedIn = true\r\n        }\r\n        this.state={\r\n            procedeToOrder : \"\",\r\n            isLoggedIn\r\n        }\r\n    }\r\n    procedeOrder(){\r\n        this.setState({\r\n            procedeToOrder : 'order'\r\n        })\r\n    }\r\n    handleAddQuantity=(index)=>{\r\n        this.props.addItemQuantity(index);\r\n    }\r\n    handleRemoveQuantity=(index)=>{\r\n        this.props.removeItemQuantity(index);\r\n    }\r\n    handleRemoveItem=(index)=>{\r\n        this.props.removeItem(index);\r\n    }\r\n    render(){\r\n        if(!this.state.isLoggedIn){\r\n           return <Redirect to=\"/signin\"/> \r\n        }\r\n        return(<div className='parent'>\r\n            <div className='parent'>\r\n            <div className='row border-black'>\r\n            {    this.props.items && this.props.items.map((item,index)=>{\r\n                  return(\r\n                        <Card className='col-lg-3 col-md-3 col-sm-3 col m-2' key={index}>\r\n                         <Card.Content >\r\n                        <Card.Header className='clothName'>{item.cloth_name}</Card.Header><hr/>\r\n                        <Card.Meta className='amount'>\r\n                         <span className=''>Total Amount : </span>\r\n                            <span className='bold float-right'><Icon name='rupee' />{item.total}</span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                          <strong> {item.cloth_quantity} Piece</strong> Of {item.cloth_name} Is Order For <strong>{item.action}</strong>\r\n                        </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                        <button  className=\"fetchButton\" onClick={ (event) => { this.handleAddQuantity(index)}}>+</button>&nbsp;\r\n                                            <button  className=\"fetchButton\" onClick={ (event) => { this.handleRemoveQuantity(index)}}>-</button>&nbsp;\r\n                                            <button className=\"fetchButton\" onClick={ (event)=>{this.handleRemoveItem(index)}} >Remove</button>\r\n                        </Card.Content>\r\n                    </Card>\r\n                  )  \r\n                })}\r\n            </div>\r\n            {this.props.items.length >=1 && (<div>\r\n                <Link to='/address' href='/address'> <button className='fetchButton float-left m-2 border rounded' onClick={(event)=>{this.procedeOrder()}}>Proced To Order</button></Link>\r\n            <div className=\"totalContainer border rounded m-2 p-2 float-right\">Total Amount : <Icon name='rupee' /> {this.props.totalCost}</div>\r\n            </div>)}\r\n            </div>\r\n            <div>\r\n                {this.state.procedeToOrder }\r\n            </div>\r\n            <Booking/>\r\n           \r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>\r\n{\r\n    console.log(\"from item\",state.orderReducer.items);\r\n    return{\r\n        items : state.orderReducer.items,\r\n        totalCost : state.orderReducer.totalCost,\r\n        fullName : state.loginReducer.loginUser.fullName,\r\n        address : state.loginReducer.loginUser.address,\r\n        mobile : state.loginReducer.loginUser.mobile,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addItemQuantity : (index)=>dispatch(addItemQuantity(index)),\r\n        removeItemQuantity : (index)=>dispatch(removeItemQuantity(index)),\r\n        removeItem : (index)=>dispatch(removeItem(index))\r\n    }\r\n   }\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BookingCart);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link ,Redirect } from 'react-router-dom';\r\nclass Logout extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        localStorage.removeItem('token');\r\n       \r\n        this.state={\r\n           \r\n        }\r\n    }\r\n    render(){\r\n       \r\n        return(<div>\r\n            <h1> You Are Logout</h1>\r\n            <button className=\"fetchButton\"><Link to=\"/signin\">SIGNIN</Link></button>\r\n        </div>);\r\n    }\r\n\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Logout);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n             Profile\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              Make Orders\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              Fetch Orders\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: this.toggle,\r\n            })}\r\n          </Header>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            Content\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default SiderDemo;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, NavLink,Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport  Navbar  from \"./React/Navbar\";\nimport  Services  from \"./React/Services\";\nimport Homepage from './React/Homepage';\nimport  Profile  from \"./React/Profile\";\nimport  Nomatch  from \"./React/Nomatch\";\nimport SignUpForm from './React/SignUpForm';\nimport SignInForm from './React/SignInForm';\nimport BookingCart  from './React/bookingCart';\nimport ChangeAddress from './React/changeAddress';\nimport Logout from './React/logout';\nimport Dashboard from './React/dashboard';\n\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>          \n        <Navbar/>        \n         <Container>\n          <Switch>\n              <Route exact path=\"/\" component={Homepage} />\n              <Route path=\"/services\" component={Services} />\n              <Route path='/profile' component={Profile}/>\n              <Route path='/signin' component={SignInForm}/>\n              <Route path='/signup' component={SignUpForm}/>\n              <Route path='/booking' component={BookingCart}/>\n              <Route path='/address' component={ChangeAddress}/>\n              <Route path=\"/logout\" component={Logout}/>\n              <Route path=\"/Dashboard\" component={Dashboard}/>                   \n              <Route component={Nomatch} />\n            </Switch> \n          </Container>          \n         </Router>        \n       </div >\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    combineReducers,\r\n    createStore,\r\n    applyMiddleware\r\n} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport ls from 'local-storage';\r\nimport localStorage from \"local-storage\";\r\nconst axios = require(\"axios\");\r\n\r\nlet loginState={\r\n       loginUser:{\r\n           \r\n    },\r\n    message:\"\",\r\n    loginMessage:\"\",\r\n    isLoggedIn : false\r\n}\r\nconst loginReducer=(state=loginState,action)=>{\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n    switch (action.type) {\r\n        \r\n        case 'login_user':\r\n           stateCopy.loginUser = action.payload;\r\n           stateCopy.isLoggedIn = true;\r\n           console.log(stateCopy.loginUser);\r\n            return stateCopy;\r\n        \r\n        case 'make_registration':\r\n            stateCopy.message = action.payload;\r\n            console.log(stateCopy.message);\r\n            return stateCopy;  \r\n        \r\n            case 'login_message':\r\n                stateCopy.loginMessage = action.payload;\r\n                console.log(stateCopy.message);\r\n                return stateCopy;     \r\n        default:\r\n            return stateCopy;\r\n    }\r\n}\r\n\r\n\r\nlet userOrderState={\r\n    items :[],\r\n    washAction : ['Wash','Dry Clean','Iron'],\r\n    paymentMode :['Card','UPI','Google_pay','Cash_On_Delivery'],\r\n    date :\"\",\r\n    address :\"\",\r\n    userSelectedActionType: \"\",\r\n    timeSloat :['9am-10am',\"10am-11am\",\"11am-12am\",\"12pm-1pm\",\"1pm-2pm\",\"2pm-3pm\",'3pm-4pm','4pm-5pm','5pm-6pm'],\r\n    userSelectedTimeSloat :\"\",\r\n    orderName :\"Vaibhav\",\r\n    totalCost : 0\r\n}\r\n\r\n\r\nconst orderReducer=(state=userOrderState,action)=>{\r\n    \r\n        let totalvalue;\r\n    let stateCopy = JSON.parse(JSON.stringify(state));\r\n    let result = ls.get(\"BookingCart\");\r\n    let total = ls.get(\"BookingCartTotal\");\r\n    stateCopy.items = result;\r\n    stateCopy.totalCost = total;\r\n    switch (action.type) {\r\n        \r\n         case 'change_action':\r\n                console.log(action.payload);\r\n             stateCopy.userSelectedActionType = action.payload;\r\n             return stateCopy;\r\n        case 'select_date':\r\n            console.log(action.payload);\r\n                stateCopy.date = action.payload;\r\n                return stateCopy;\r\n        case 'change_time':\r\n                console.log(action.payload);\r\n            stateCopy.userSelectedTimeSloat = action.payload;\r\n            return stateCopy;\r\n\r\n        case 'fetch_user':\r\n                \r\n           stateCopy.order = action.payload;\r\n           console.log(stateCopy.order);\r\n            return stateCopy;\r\n\r\n        case 'change_name':\r\n           \r\n            stateCopy.orderName =action.payload;\r\n            return stateCopy; \r\n\r\n        case 'selectAddressForOrder':  \r\n            stateCopy.address = action.payload;\r\n            console.log(stateCopy.address);\r\n            return stateCopy;\r\n            \r\n        case 'selectNewAddressForOrder':\r\n               \r\n            stateCopy.address = action.payload;\r\n            return stateCopy;  \r\n        case 'paymentMode' :\r\n            stateCopy.userSelectedPaymentMode = action.payload;\r\n            console.log(action.payload);\r\n            return stateCopy;\r\n        case 'book_order': \r\n        console.log(action.payload);             \r\n             let order={}\r\n             let orderId=0;\r\n             order.order_userId = action.payload;\r\n             order.order_date = stateCopy.date;\r\n             order.order_collection_time = stateCopy.userSelectedTimeSloat;   \r\n             order.order_status = \"Booked\";\r\n             order.order_totalprice = stateCopy.totalCost;   \r\n             order.order_paymentmode = stateCopy.userSelectedPaymentMode;\r\n             \r\n             order.order_address = stateCopy.address\r\n             if(order.date===\"\")\r\n             {\r\n               alert('Please select Date For Order'); \r\n               return stateCopy;\r\n             }\r\n             if(order.order_collection_time === \"\"){\r\n                alert('Please Select Timeslot For Order');\r\n                return stateCopy;\r\n             }\r\n            \r\n             let result = axios.post('http://localhost:8080/order/add',order);\r\n             result \r\n               .then((response)=>{\r\n                  \r\n                    orderId = response.data.order.id;\r\n\r\n                    for( let item in stateCopy.items){\r\n                         stateCopy.items[item].order_orderId = orderId;\r\n                     }\r\n                     \r\n                    result = axios.post('http://localhost:8080/cloth/add',stateCopy.items);\r\n                     result\r\n                         .then((response)=>{\r\n                             alert('order Placed Successfully');\r\n                            ls.set(\"BookingCart\",[]);\r\n                            ls.set(\"BookingCartTotal\",0);\r\n                            stateCopy.items = [];\r\n                            stateCopy.totalCost = 0;\r\n                            return stateCopy;\r\n\r\n\r\n                         })\r\n                         .catch((error)=>{ console.log(error);})\r\n     \r\n                   \r\n               })\r\n               .catch((error)=>{ console.log(error)});\r\n\r\n               \r\n           \r\n            //   if(flag){\r\n                 \r\n            //   }      \r\n           return stateCopy; \r\n\r\n        case 'add_cloth':\r\n          let itemsCopy = stateCopy.items.slice(); \r\n\r\n              let { ...newItem} = action.payload;\r\n              newItem.action =action.payloadAction;\r\n              let total = newItem.cloth_quantity * newItem.price;\r\n              newItem.total = total;\r\n              stateCopy.totalCost = stateCopy.totalCost + total; \r\n\r\n              itemsCopy.push(newItem);\r\n              stateCopy.items = itemsCopy;\r\n              console.log(stateCopy.items);\r\n              ls.set('BookingCart',stateCopy.items); \r\n              ls.set('BookingCartTotal',stateCopy.totalCost);\r\n            return stateCopy;   \r\n        case 'addQuantity' :\r\n\r\n             let index = action.payload;\r\n                stateCopy.items[index].cloth_quantity++;\r\n                totalvalue = stateCopy.items[index].total + stateCopy.items[index].price;\r\n                \r\n                stateCopy.items[index].total = totalvalue;\r\n                stateCopy.totalCost = stateCopy.totalCost + stateCopy.items[index].price;\r\n               // stateCopy.items = itemsCopy\r\n               ls.set(\"BookingCart\",stateCopy.items);\r\n               ls.set('BookingCartTotal',stateCopy.totalCost);\r\n\r\n                return stateCopy;\r\n\r\n        case 'removeQuantity' :\r\n                \r\n                let itemindex = action.payload;\r\n                if( stateCopy.items[itemindex].cloth_quantity > 1)\r\n                {\r\n                    stateCopy.items[itemindex].cloth_quantity--;\r\n                    totalvalue = stateCopy.items[itemindex].total -  stateCopy.items[itemindex].price;\r\n               \r\n                stateCopy.items[itemindex].total = totalvalue;\r\n                stateCopy.totalCost = stateCopy.totalCost - stateCopy.items[itemindex].price;\r\n                }\r\n                \r\n                else\r\n                    alert('Select 1 Piece For Order')   \r\n                  \r\n                   ls.set(\"BookingCart\",stateCopy.items);\r\n                   ls.set('BookingCartTotal',stateCopy.totalCost);\r\n                   return stateCopy;\r\n            \r\n          \r\n        case 'removeItem' :\r\n               \r\n                let itemIndex = action.payload;\r\n                totalvalue = stateCopy.items[itemIndex].price * stateCopy.items[itemIndex].cloth_quantity;\r\n                stateCopy.totalCost = stateCopy.totalCost - totalvalue;\r\n                let newItems = stateCopy.items.filter((item,itemindex)=>{\r\n                    return (itemIndex !== itemindex)\r\n                })\r\n                stateCopy.items = newItems;\r\n                ls.set(\"BookingCart\",stateCopy.items);\r\n                ls.set('BookingCartTotal',stateCopy.totalCost);\r\n\r\n                return stateCopy;     \r\n        default:\r\n            return stateCopy;\r\n\r\n    }\r\n     \r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    loginReducer,\r\n    orderReducer\r\n})\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider} from 'react-redux';\nimport store from './Redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={ store }>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}